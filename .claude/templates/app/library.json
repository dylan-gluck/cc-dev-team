{
  "name": "library",
  "displayName": "Reusable Package/Library",
  "description": "Python or TypeScript library with testing, documentation, and package distribution setup",
  "category": "app",
  "stack": {
    "primary": "Python/TypeScript",
    "secondary": ["PyPI/NPM", "Sphinx/TypeDoc", "GitHub Actions"],
    "infrastructure": "Package Registry (PyPI/NPM)"
  },
  "structure": {
    "root": "apps/{project}",
    "directories": [
      "src",
      "src/{project}",
      "tests",
      "tests/unit",
      "tests/integration",
      "docs",
      "docs/source",
      "docs/examples",
      "examples",
      "benchmarks",
      ".github",
      ".github/workflows"
    ]
  },
  "dependencies": {
    "system": ["git", "python3|node", "uv|npm"],
    "development": {
      "python": {
        "core": {
          "pydantic": "^2.5.0",
          "typing-extensions": "^4.9.0"
        },
        "testing": {
          "pytest": "^7.4.0",
          "pytest-cov": "^4.1.0",
          "pytest-asyncio": "^0.21.0",
          "pytest-benchmark": "^4.0.0",
          "hypothesis": "^6.92.0"
        },
        "docs": {
          "sphinx": "^7.2.0",
          "sphinx-rtd-theme": "^2.0.0",
          "sphinx-autodoc-typehints": "^1.25.0",
          "myst-parser": "^2.0.0"
        },
        "dev": {
          "ruff": "^0.1.0",
          "mypy": "^1.8.0",
          "pre-commit": "^3.6.0",
          "build": "^1.0.0",
          "twine": "^4.0.0",
          "tox": "^4.11.0"
        }
      },
      "typescript": {
        "core": {
          "typescript": "^5.3.0"
        },
        "testing": {
          "jest": "^29.7.0",
          "@types/jest": "^29.5.0",
          "ts-jest": "^29.1.0"
        },
        "docs": {
          "typedoc": "^0.25.0"
        },
        "dev": {
          "eslint": "^8.56.0",
          "@typescript-eslint/eslint-plugin": "^6.18.0",
          "@typescript-eslint/parser": "^6.18.0",
          "prettier": "^3.1.0",
          "husky": "^8.0.0",
          "lint-staged": "^15.2.0"
        }
      }
    },
    "production": {}
  },
  "scripts": {
    "python": {
      "install": "uv pip install -e .[dev]",
      "test": "pytest -v --cov=src/{project}",
      "test:all": "tox",
      "benchmark": "pytest benchmarks/ --benchmark-only",
      "format": "ruff format .",
      "lint": "ruff check . --fix",
      "type-check": "mypy src/{project}",
      "docs": "sphinx-build -b html docs/source docs/build",
      "docs:serve": "python -m http.server -d docs/build 8080",
      "build": "python -m build",
      "publish:test": "twine upload --repository testpypi dist/*",
      "publish": "twine upload dist/*",
      "clean": "rm -rf build dist *.egg-info .tox .pytest_cache .coverage"
    },
    "typescript": {
      "build": "tsc",
      "test": "jest",
      "test:watch": "jest --watch",
      "test:coverage": "jest --coverage",
      "lint": "eslint src --fix",
      "format": "prettier --write \"src/**/*.ts\"",
      "type-check": "tsc --noEmit",
      "docs": "typedoc --out docs src",
      "prepublishOnly": "npm run build && npm test",
      "prepare": "husky install"
    }
  },
  "options": [
    "language-python",
    "language-typescript",
    "testing-comprehensive",
    "benchmarking",
    "documentation-api",
    "examples-included",
    "ci-github-actions",
    "semantic-versioning",
    "changelog-automated",
    "code-coverage",
    "type-hints",
    "async-support"
  ],
  "notes": [
    "Supports both Python and TypeScript implementations",
    "Comprehensive testing with coverage reports",
    "API documentation auto-generated from code",
    "Benchmarking suite for performance testing",
    "Examples directory with usage demonstrations",
    "Pre-commit hooks for code quality",
    "Semantic versioning with automated changelog",
    "GitHub Actions for CI/CD pipeline",
    "Package publishing to PyPI or NPM"
  ],
  "agents": {
    "setup": ["engineering-fullstack"],
    "enhance": ["engineering-test", "documentation-writer"],
    "review": ["engineering-lead", "qa-analyst"]
  },
  "files": {
    "python": {
      "pyproject.toml": "[project]\nname = \"{project}\"\nversion = \"0.1.0\"\ndescription = \"A reusable Python library\"\nauthors = [{name = \"Your Name\", email = \"your.email@example.com\"}]\nreadme = \"README.md\"\nlicense = {text = \"MIT\"}\nrequires-python = \">=3.8\"\nclassifiers = [\n    \"Development Status :: 3 - Alpha\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"pytest>=7.4.0\",\n    \"pytest-cov>=4.1.0\",\n    \"ruff>=0.1.0\",\n    \"mypy>=1.8.0\",\n    \"sphinx>=7.2.0\",\n]\n\n[build-system]\nrequires = [\"setuptools>=61.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.ruff]\nline-length = 88\ntarget-version = \"py38\"\n\n[tool.mypy]\npython_version = \"3.8\"\nwarn_return_any = true\nwarn_unused_configs = true\n\n[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\npython_files = [\"test_*.py\"]\n\n[tool.coverage.run]\nsource = [\"src\"]\n",
      "tox.ini": "[tox]\nenvlist = py{38,39,310,311,312}, lint, type, docs\nisolated_build = True\n\n[testenv]\ndeps =\n    pytest>=7.4.0\n    pytest-cov>=4.1.0\ncommands =\n    pytest {posargs}\n\n[testenv:lint]\ndeps = ruff>=0.1.0\ncommands = ruff check src tests\n\n[testenv:type]\ndeps = mypy>=1.8.0\ncommands = mypy src\n\n[testenv:docs]\ndeps =\n    sphinx>=7.2.0\n    sphinx-rtd-theme>=2.0.0\ncommands = sphinx-build -b html docs/source docs/build\n"
    },
    "typescript": {
      "package.json": "{\n  \"name\": \"{project}\",\n  \"version\": \"0.1.0\",\n  \"description\": \"A reusable TypeScript library\",\n  \"main\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"test\": \"jest\",\n    \"lint\": \"eslint src --fix\",\n    \"format\": \"prettier --write 'src/**/*.ts'\",\n    \"prepublishOnly\": \"npm run build && npm test\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@types/jest\": \"^29.5.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.18.0\",\n    \"@typescript-eslint/parser\": \"^6.18.0\",\n    \"eslint\": \"^8.56.0\",\n    \"jest\": \"^29.7.0\",\n    \"prettier\": \"^3.1.0\",\n    \"ts-jest\": \"^29.1.0\",\n    \"typedoc\": \"^0.25.0\",\n    \"typescript\": \"^5.3.0\"\n  },\n  \"files\": [\n    \"dist\"\n  ]\n}",
      "tsconfig.json": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"commonjs\",\n    \"lib\": [\"ES2020\"],\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"sourceMap\": true,\n    \"outDir\": \"./dist\",\n    \"rootDir\": \"./src\",\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"resolveJsonModule\": true,\n    \"moduleResolution\": \"node\"\n  },\n  \"include\": [\"src/**/*\"],\n  \"exclude\": [\"node_modules\", \"dist\", \"tests\"]\n}",
      "jest.config.js": "module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  roots: ['<rootDir>/src', '<rootDir>/tests'],\n  testMatch: ['**/__tests__/**/*.ts', '**/?(*.)+(spec|test).ts'],\n  collectCoverageFrom: [\n    'src/**/*.ts',\n    '!src/**/*.d.ts',\n    '!src/**/*.test.ts'\n  ]\n};"
    }
  }
}