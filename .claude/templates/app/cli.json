{
  "name": "cli",
  "displayName": "Command-Line Tool",
  "description": "Python CLI application with Click framework, UV package management, and PyPI distribution ready",
  "category": "app",
  "stack": {
    "primary": "Python + Click",
    "secondary": ["UV", "Rich", "PyPI"],
    "infrastructure": "PyPI / GitHub Releases"
  },
  "structure": {
    "root": "apps/{project}",
    "directories": [
      "src",
      "src/{project}",
      "src/{project}/commands",
      "src/{project}/utils",
      "src/{project}/config",
      "tests",
      "tests/unit",
      "tests/integration",
      "docs",
      "scripts",
      "examples"
    ]
  },
  "dependencies": {
    "system": ["python3", "uv", "git"],
    "development": {
      "core": {
        "click": "^8.1.0",
        "rich": "^13.7.0",
        "pydantic": "^2.5.0",
        "pydantic-settings": "^2.1.0"
      },
      "utilities": {
        "httpx": "^0.25.0",
        "pyyaml": "^6.0.0",
        "toml": "^0.10.0",
        "python-dotenv": "^1.0.0"
      },
      "testing": {
        "pytest": "^7.4.0",
        "pytest-cov": "^4.1.0",
        "pytest-mock": "^3.12.0",
        "click.testing": "^8.1.0"
      },
      "dev": {
        "ruff": "^0.1.0",
        "mypy": "^1.8.0",
        "pre-commit": "^3.6.0",
        "build": "^1.0.0",
        "twine": "^4.0.0"
      }
    },
    "production": {}
  },
  "scripts": {
    "install": "uv pip install -e .",
    "dev": "uv run {project}",
    "test": "pytest -v --cov=src/{project} --cov-report=term-missing",
    "test:unit": "pytest tests/unit -v",
    "test:integration": "pytest tests/integration -v",
    "format": "ruff format .",
    "lint": "ruff check . --fix",
    "type-check": "mypy src/{project}",
    "build": "python -m build",
    "publish:test": "twine upload --repository testpypi dist/*",
    "publish": "twine upload dist/*",
    "clean": "rm -rf build dist *.egg-info",
    "docs": "sphinx-build -b html docs docs/_build"
  },
  "options": [
    "config-yaml",
    "config-toml",
    "output-json",
    "output-table",
    "progress-bars",
    "async-commands",
    "plugin-system",
    "auto-completion",
    "colored-output",
    "interactive-mode",
    "testing-comprehensive",
    "ci-github-actions",
    "pypi-ready"
  ],
  "notes": [
    "Uses Click for command parsing and grouping",
    "Rich for beautiful terminal output",
    "Configuration via YAML/TOML/ENV files",
    "Automatic shell completion generation",
    "Progress bars for long-running operations",
    "Structured logging with levels",
    "PyPI package distribution ready",
    "Follows Python packaging best practices",
    "Includes comprehensive CLI testing utilities"
  ],
  "agents": {
    "setup": ["engineering-fullstack"],
    "enhance": ["engineering-test", "documentation-writer"],
    "review": ["engineering-lead"]
  },
  "files": {
    "pyproject.toml": "[project]\nname = \"{project}\"\nversion = \"0.1.0\"\ndescription = \"A powerful CLI tool\"\nauthors = [{name = \"Your Name\", email = \"your.email@example.com\"}]\nreadme = \"README.md\"\nlicense = {text = \"MIT\"}\nrequires-python = \">=3.8\"\ndependencies = [\n    \"click>=8.1.0\",\n    \"rich>=13.7.0\",\n]\n\n[project.scripts]\n{project} = \"{project}.cli:main\"\n\n[build-system]\nrequires = [\"setuptools>=61.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.ruff]\nline-length = 88\ntarget-version = \"py38\"\n\n[tool.mypy]\npython_version = \"3.8\"\nwarn_return_any = true\nwarn_unused_configs = true\n\n[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\npython_files = [\"test_*.py\"]\npython_classes = [\"Test*\"]\npython_functions = [\"test_*\"]\n",
    ".gitignore": "# Python\n__pycache__/\n*.py[cod]\n*$py.class\n*.so\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nPIPFILE.lock\n\n# Testing\n.coverage\n.pytest_cache/\n.mypy_cache/\n.ruff_cache/\nhtmlcov/\n\n# IDE\n.vscode/\n.idea/\n*.swp\n*.swo\n*~\n\n# Environment\n.env\n.venv\nenv/\nvenv/\nENV/\n\n# Distribution\n*.tar.gz\n*.whl\n"
  }
}